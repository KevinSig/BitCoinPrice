{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useEffect, useSate } from \"react\";\n\nvar FetchData = function FetchData(url) {\n  var _useState = useState({\n    data: null,\n    loading: true\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useEffect(function () {\n    setState({\n      data: null,\n      loading: true\n    }); // whenever this hook is run\n\n    fetch(url).then(function (x) {\n      return x.text();\n    }).then(function (y) {\n      return setState({\n        data: y,\n        loading: false\n      });\n    });\n  }, [url]);\n  return state;\n};\n\nexport default FetchData;","map":{"version":3,"sources":["/Users/asigari/Desktop/PROJECTS/next-js/hooks/FetchData.js"],"names":["React","useEffect","useSate","FetchData","url","useState","data","loading","state","setState","fetch","then","x","text","y"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,OAA1C;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,GAAG,EAAI;AAAA,kBACGC,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,OAAO,EAAE;AAAvB,GAAD,CADX;AAAA;AAAA,MAChBC,KADgB;AAAA,MACTC,QADS;;AAGvBR,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,OAAO,EAAE;AAAvB,KAAD,CAAR,CADc,CAC2B;;AACzCG,IAAAA,KAAK,CAACN,GAAD,CAAL,CACGO,IADH,CACQ,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,KADT,EAEGF,IAFH,CAEQ,UAAAG,CAAC;AAAA,aACDL,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAEQ,CAAR;AAAWP,QAAAA,OAAO,EAAE;AAApB,OAAD,CADP;AAAA,KAFT;AAID,GANQ,EAMN,CAACH,GAAD,CANM,CAAT;AAQA,SAAOI,KAAP;AACD,CAZD;;AAcA,eAAeL,SAAf","sourcesContent":["import React, { useEffect, useSate } from \"react\";\n\nconst FetchData = url => {\n  const [state, setState] = useState({ data: null, loading: true });\n\n  useEffect(() => {\n    setState({ data: null, loading: true }); // whenever this hook is run\n    fetch(url)\n      .then(x => x.text())\n      .then(y => \n            setState({ data: y, loading: false }));\n  }, [url]);\n\n  return state;\n};\n\nexport default FetchData;\n"]},"metadata":{},"sourceType":"module"}